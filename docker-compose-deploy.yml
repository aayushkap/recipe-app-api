# Deployment Docker Compose file for the application

version: "3.9" # specify docker-compose version

services:
  app:
    build:
      context: . # use the Dockerfile in the current directory
    restart: always # restart the container automatically when crashed
    volumes:
      - static-data:/vol/web # mount the named volume static-data to persist the static files
    environment:
      - DB_HOST=db # set the database host to db Service name
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on:
      - db # wait for the db service to be ready before starting the app service

  db: # define the db service
    image: postgres:13-alpine # use the official Postgres image. Hub.Docker.Com
    restart: always # restart the container automatically when crashed
    volumes:
      - postgres-data:/var/lib/postgresql/data # mount the named volume db-data to persist the Postgres data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  proxy:
    build:
      context: ./proxy #use the Dockerfile in the proxy directory
    restart: always
    depends_on:
      - app
    ports:
      - 80:8000
    volumes:
      - static-data:/vol/static

# We define two named volumes to persist the Postgres data and static files
volumes:
  postgres-data: # create a named volume for the Postgres data
  static-data: # create a named volume for the static files
